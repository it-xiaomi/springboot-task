spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://{自己数据库连接}:{数据库端口}/{数据库名称}?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
spring.datasource.username={数据库用户名}
spring.datasource.password={数据库密码}
spring.datasource.initialSize=5  #连接初始值，连接池启动时创建的连接数量的初始值
spring.datasource.minIdle=5      #最小空闲值，当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
spring.datasource.maxActive=20   #连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制
spring.datasource.maxWait=60000  #配置获取连接等待超时的时间
spring.datasource.timeBetweenEvictionRunsMillis=60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000    #配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.validationQuery=SELECT 1 FROM DUAL   #用来验证数据库连接的有效性
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true   #是否对已备语句进行池管理（布尔值），是否对PreparedStatement进行缓存，并且指定每个连接上PSCache的大小
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall       # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录